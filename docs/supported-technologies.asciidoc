ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/dotnet[elastic.co]
endif::[]

[[supported-technologies]]
== Supported technologies

If your favorite technology is not supported yet,
you can vote for it by participating in our
https://docs.google.com/forms/d/18SgsVo9asGNFMjRqwdrk3wTHNwPhtHv4jE35hZRCL6A/[survey].
We will use the results to add support for the most requested technologies.

Another option is to add a dependency to the agent's <<public-api, public API>>
in order to programmatically create custom transactions and spans.

If you want to extend the auto-instrumentation capabilities of the agent,
the https://github.com/elastic/apm-agent-dotnet/blob/master/CONTRIBUTING.md[contributing guide] should get you started.

NOTE: If, for example,
the HTTP client library of your choice is not listed,
it means that there won't be spans for those outgoing HTTP requests.
If the web framework you are using is not supported,
the agent will not capture transactions.

[float]
[[supported-dotnet-flavors]]
=== .NET versions

The agent works on every .NET flavor and version that supports .NET Standard 2.0.
This means .NET Core 2.0 (or newer) and .NET Framework 4.6.1 (or newer).

[float]
[[supported-web-frameworks]]
=== Web frameworks

Automatic instrumentation for a web framework means
a transaction is automatically created for each incoming request and it is named after the registered route.

We support automatic instrumentation for the following web frameworks.

|===
|Framework |Supported versions |Supported since agent's version

|ASP.NET Core
|2.1 and later
|1.0

|ASP.NET (.NET Framework) on IIS
|4.6.1 or newer (IIS 7.0 or newer)
|1.1

|===

[float]
[[supported-rpc-frameworks]]
=== RPC Frameworks

The agent supports gRPC on .NET Core both on the client and the server side. Every gRPC call is automatically captured by the agent. 

Streaming is not supported. In practice this means for streaming use-cases the agent does not create transactions and spans automatically.

|===
|Framework |Supported versions |Supported since agent's version

|gRPC on .NET Core
|2.23.2+
|1.7
|===

[float]
[[supported-data-access-technologies]]
=== Data access technologies

We support automatic instrumentation for the following data access technologies.

|===
|Data access technology |Supported versions |Notes |Supported since agent's version

|Entity Framework (EF) Core
|2.x+
|A DB span is automatically created for each access to underlying database performed by Entity Framework Core.
|1.0

|Entity Framework (EF) 6
|6.2+
|A DB span is automatically created for each access to underlying database performed by Entity Framework 6.
|1.2

| Elasticsearch (Elasticsearch.Net and NEST)
| 7.6.0+
| __If you're using 7.10.1 or 7.11.0, upgrade to at least 7.11.1 which fixes a bug in capture__
| 1.6

| Redis (StackExchange.Redis)
| 2.0.495+
| A DB span is automatically created for each profiled redis command peformed by StackExchange.Redis 
| 1.8
|===

[float]
[[supported-networking-client-side-technologies]]
=== Networking client-side technologies

Automatic instrumentation for networking client-side technology means
an HTTP span is automatically created for each outgoing HTTP request and tracing headers are propagated. 
The spans are named after the schema `<method> <host>`, for example `GET elastic.co`.

|===
|Framework |Supported versions |Supported since agent's version

|System.Net.Http.HttpClient on .NET Core
|
|1.0

|System.Net.Http.HttpClient on .NET Framework
|
|1.1

|===

[float]
[[supported-cloud-services]]
=== Cloud services

Automatic instrumentation for the following cloud services

|===
| Cloud services | Supported versions | Notes | Supported since agent's version

| Azure Service Bus
| 3.0.0+ for Microsoft.Azure.ServiceBus,
  7.0.0+ for Azure.Messaging.ServiceBus
| A new transaction is created for received and
receive deferred messages. A new span is created for sent and scheduled messages if there's a current transaction.
| 1.9