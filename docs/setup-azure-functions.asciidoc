
[[setup-azure-functions]]
=== Azure Functions

The .NET APM Agent can trace function invocations in an https://learn.microsoft.com/en-us/azure/azure-functions[Azure Functions] app.

[float]
==== Prerequisites

You need an APM Server to send APM data to. Follow the
{apm-guide-ref}/apm-quick-start.html[APM Quick start] if you have not set one up
yet. You will need your *APM server URL* and an APM server *secret token* (or
*API key*) for configuring the APM agent below.

You will also need an Azure Function app to monitor. If you do not have an
existing one, you can follow https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-cli-csharp[this Azure guide]
to create one.

You can also take a look at and use this
https://github.com/elastic/apm-agent-dotnet/tree/1.x/sample/Elastic.AzureFunctionApp.Isolated[Azure Functions example app with Elastic APM already integrated].

[IMPORTANT]
====
Currently, only .NET Azure Functions in an
https://learn.microsoft.com/en-us/azure/azure-functions/dotnet-isolated-process-guide[isolated worker process]
can be traced.
====

[float]
[[azure-functions-setup]]
==== Step 1: Add the NuGet package

Add the `Elastic.Apm.Azure.Functions` NuGet package to your Azure Functions project:

[source,bash]
----
dotnet add package Elastic.Apm.Azure.Functions
----

[float]
==== Step 2: Add the tracing Middleware

For the APM agent to trace Azure Functions invocations, the `Elastic.Apm.Azure.Functions.ApmMiddleware`
must be used in your Azure Functions app.

[source, c#]
----
using Elastic.Apm.Azure.Functions;
using Microsoft.Extensions.Hosting;

var host = new HostBuilder()
	.ConfigureFunctionsWorkerDefaults(builder =>
	{
		builder.UseMiddleware<ApmMiddleware>();
	})
	.Build();

host.Run();
----

[float]
==== Step 3: Configure the APM agent

The APM agent can be configured with environment variables. Using environment variables
allows you to use https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=portal#settings[application settings in the Azure Portal], enabling you to hide values and update settings
without needing to re-deploy code.

Open _Configuration > Application settings_ for your Function App in the Azure Portal
and set:

[source,yaml]
----
ELASTIC_APM_SERVER_URL: <your APM server URL from the prerequisites step>
ELASTIC_APM_SECRET_TOKEN: <your APM secret token from the prerequisites step>
----

For example:

image::./images/azure-functions-configuration.png[Configuring the APM Agent in the Azure Portal]

[float]
[[azure-functions-limitations]]
==== Limitations

Azure Functions instrumentation currently does _not_ collect system metrics in
the background because of a concern with unintentionally increasing Azure
Functions costs (for Consumption plans).
