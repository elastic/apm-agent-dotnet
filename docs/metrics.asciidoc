ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/dotnet[elastic.co]
endif::[]

[[metrics]]
== Metrics

The .NET agent tracks certain system and application metrics.
Some of them have built-in visualizations and some can only be visualized with custom Kibana dashboards.

These metrics will be sent regularly to the APM Server and from there to Elasticsearch.
You can adjust the interval with the setting <<config-metrics-interval,`MetricsInterval`>>.

The metrics will be stored in the `apm-*` index and have the `processor.event` property set to `metric`.

"Platform: all" means that the metric is available on every platform where .NET Core is supported.

[float]
[[metrics-system]]
=== System metrics

As of APM version 6.6, these metrics will be visualized in the APM app.

For more system metrics, consider installing {metricbeat-ref}/index.html[metricbeat] on your hosts.

*`system.cpu.total.norm.pct`*::
+
--
type: scaled_float

format: percent

platform: Windows and Linux only

The percentage of CPU time in states other than Idle and IOWait, normalized by the number of cores.
--


*`system.process.cpu.total.norm.pct`*::
+
--
type: scaled_float

format: percent

platform: all

The percentage of CPU time spent by the process since the last event.
This value is normalized by the number of CPU cores and it ranges from 0 to 100%.
--


*`system.memory.total`*::
+
--
type: long

format: bytes

Platform: Windows and Linux only.

Total memory.
--


*`system.memory.actual.free`*::
+
--
type: long

format: bytes

Platform: Windows and Linux only.

Actual free memory.
--


*`system.process.memory.size`*::
+
--
type: long

format: bytes

platform: all

The total virtual memory the process has.
--

*`system.process.memory.rss.bytes`*::
+
--
type: long

format: bytes

platform: all

The total physical memory the process has.
--

[float]
[[metrics-runtime]]
=== Runtime metrics


*`clr.gc.count`*::
+
--
type: long

Platform: all.

The total number of GC collections that have occurred.
--

*`clr.gc.gen0size`*::
+
--
type: long

format: bytes

Platform: all.

The size of the generation 0 heap.
--

*`clr.gc.gen1size`*::
+
--
type: long

format: bytes

Platform: all.

The size of the generation 1 heap.
--

*`clr.gc.gen2size`*::
+
--
type: long

format: bytes

Platform: all.

The size of the generation 2 heap.
--

*`clr.gc.gen3size`*::
+
--
type: long

format: bytes

Platform: all.

The size of the generation 3 heap - also known as Large Object Heap (LOH).
--

*`clr.gc.time`*::
+
--
type: long

format: ms

Platform: all.

The approximate accumulated collection elapsed time in milliseconds.
--