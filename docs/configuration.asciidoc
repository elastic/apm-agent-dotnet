ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/dotnet[elastic.co]
endif::[]

[[configuration]]
== Configuration

You can utilize configuration options to adapt the Elastic APM agent to your needs. There are multiple configuration sources, each with different naming conventions for the property key.

By default, the agent uses environment variables. Additionally, on ASP.NET Core, the agent can plug into the https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-2.2[Microsoft.Extensions.Configuration] infrastructure.

=== Configuration on ASP.NET Core
The `UseElasticApm()` extension method offers an overload to pass an `IConfiguration` instance to the APM Agent. By using this overload in a typical ASP.NET Core application, the `Startup.cs` file would contain code similar to the following:

[source,csharp]
----
public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public void Configure(IApplicationBuilder app, IHostingEnvironment env)
    {
        //Registers the agent with an IConfiguration instance:
        app.UseElasticApm(Configuration);

        //Rest of the Configure() method...
    }
}
----

With this you can use any configuration source that you configured on the `IConfiguration` instance that you passed to the APM Agent. You can find the key of each configuration below in the IConfiguration key column.

NOTE: By simply calling `app.UseElasticApm()` without the overload, the agent will read configurations only from environment variables.

This is a typical `appsettings.json` file that contains some sample configuration. The part below `ElasticApm` is fetched by the agent if the corresponding `IConfiguration` is passed to the agent.

[source,js]
----
{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ElasticApm":
    {
      "LogLevel":  "Debug",
      "ServerUrls":  "http://myapmserver:8200",
      "TransactionSampleRate": 1.0
    }
}
----

[[config-core]]
=== Core configuration options

[float]
[[config-service-name]]
==== `ServiceName`

This is used to keep all the errors and transactions of your service together
and is the primary filter in the Elastic APM user interface.

NOTE: The service name must conform to this regular expression: ^[a-zA-Z0-9 _-]+$. In less regexy terms: Your service name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces.

[options="header"]
|============
| Environment variable name      | IConfiguration key 
| `ELASTIC_APM_SERVICE_NAME` | `ElasticApm:ServiceName`
|============

[options="header"]
|============
| Default                          | Type
| Name of the entry assembly       | String 
|============

[float]
[[config-transaction-sample-rate]]
==== `TransactionSampleRate`

By default, the agent will sample every transaction (e.g. a request to your service).
To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0.
The agent will still record the overall time and result for unsampled transactions,
but no context information, labels, or spans will be recorded.

NOTE: When parsing the value for this option, the agent doesn't consider the current culture.
It also expects that a period (`.`) is used to separate the integer and the fraction of a floating-point number.

[options="header"]
|============
| Environment variable name             | IConfiguration key 
| `ELASTIC_APM_TRANSACTION_SAMPLE_RATE` | `ElasticApm:TransactionSampleRate`
|============

[options="header"]
|============
| Default | Type
| 1.0     | Double 
|============

[[config-reporter]]
=== Reporter configuration options

[float]
[[config-secret-token]]
==== `SecretToken`

[options="header"]
|============
| Environment variable name | IConfiguration key
| `ELASTIC_APM_SECRET_TOKEN` | `ElasticApm:SecretToken`
|============

[options="header"]
|============
| Default                 | Type
| `<none>`                | String
|============

This string is used to ensure that only your agents can send data to your APM server.

Both the agents and the APM server have to be configured with the same secret token.
Use this setting in case the APM Server requires a token (e.g. APM Server in Elastic Cloud).

[float]
[[config-server-urls]]
==== `ServerUrls`

[options="header"]
|============
| Environment variable name | IConfiguration key
| `ELASTIC_APM_SERVER_URLS` | `ElasticApm:ServerUrls`
|============

[options="header"]
|============
| Default                 | Type
| `http://localhost:8200` | List
|============

The URLs for your APM Servers. The URLs must be fully qualified, including protocol (`http` or `https`) and port. To add multiple servers, separate them with a comma (`,`).

NOTE: Providing multiple URLs only works with APM Server v6.5+.

[float]
[[config-log-level]]
==== `LogLevel`

[options="header"]
|============
| Environment variable name | IConfiguration key
| `ELASTIC_APM_LOG_LEVEL`   | `ElasticApm:LogLevel`
|============

[options="header"]
|============
| Default                 | Type
| `Error`                 | String
|============

Sets the logging level for the agent.

Valid options: `Error`, `Warning`, `Info`, `Debug`.

[[config-http]]
=== HTTP configuration options

[float]
[[config-capture-headers]]
==== `CaptureHeaders` (performance)

[options="header"]
|============
| Environment variable name     | IConfiguration key
| `ELASTIC_APM_CAPTURE_HEADERS` | `ElasticApm:CaptureHeaders`
|============

[options="header"]
|============
| Default                 | Type
| `true`                  | Boolean
|============

If set to `true`,
the agent will capture request and response headers, including cookies.

NOTE: Setting this to `false` reduces network bandwidth, disk space and object allocations.
