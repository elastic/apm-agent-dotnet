ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/dotnet[elastic.co]
endif::[]

[[configuration]]
== Configuration

You can utilize configuration options to adapt the Elastic APM agent to your needs. There are multiple configuration sources, each with different naming conventions for the property key.

By default, the agent uses environment variables. Additionally, on ASP.NET Core, the agent can plug into the https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-2.2[Microsoft.Extensions.Configuration] infrastructure.

[float]
[[dynamic-configuration]]
=== Dynamic configuration

Configuration options marked with the image:./images/dynamic-config.svg[] badge can be changed at runtime
when set from a supported source.

The .NET Agent supports {apm-app-ref}/agent-configuration.html[Central configuration],
which allows you to fine-tune certain configurations via the APM app.
This feature is enabled in the Agent by default, with <<config-central-config>>.

[[configuration-on-asp-net-core]]
=== Configuration on ASP.NET Core

The `UseElasticApm()` extension method offers an overload to pass an `IConfiguration` instance to the APM Agent.
To use this type of setup, which is typical in an ASP.NET Core application, your application's `Startup.cs` file should contain code similar to the following:

[source,csharp]
----
using Elastic.Apm.AspNetCore;

public class Startup
{

    private readonly IConfiguration _configuration;

    public Startup(IConfiguration configuration)
    {
        _configuration = configuration;
    }

    public void Configure(IApplicationBuilder app, IHostingEnvironment env)
    {
        //Registers the agent with an IConfiguration instance:
        app.UseElasticApm(Configuration);

        //Rest of the Configure() method...
    }
}
----

With this setup, the Agent is able to be configured in the same way as any other library in your application.
For example, any configuration source that has been configured on the `IConfiguration` instance being passed to the APM Agent can be used to set Agent configuration values.

More information is available in the official https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-3.1[Microsoft .NET Core configuration docs]
You can find the key for each APM configuration option in this documentation, under the `IConfiguration or Web.config key` column of the option's description.

NOTE: It is also possible to call `UseElasticApm()` without the overload. In this case, the agent will only read configurations from environment variables.

NOTE: The `UseElasticApm` method only turns on ASP.NET Core monitoring. To turn on tracing for everything supported by the Agent on .NET Core, including HTTP and database monitoring, use the `UseAllElasticApm` method from the `Elastic.Apm NetCoreAll` package. Learn more in <<setup-asp-net-core,ASP.NET Core setup>>.

[float]
[[sample-config]]
==== Sample configuration file

Here is a sample `appsettings.json` configuration file for a typical ASP.NET Core application that has been activated with `UseElasticApm()`. There are two important takeaways, which are listed as callouts below the example:

[source,js]
----
{
  "Logging": {
    "LogLevel": { <1>
      "Default": "Warning",
      "Elastic.Apm": "Debug"
    }
  },
  "AllowedHosts": "*",
  "ElasticApm": <2>
    {
      "ServerUrl":  "http://myapmserver:8200",
      "SecretToken":  "apm-server-secret-token",
      "TransactionSampleRate": 1.0
    }
}
----
<1> With ASP.NET Core, you must set `LogLevel` for the internal APM logger in the standard `Logging` section with the `Elastic.Apm` category name.
<2> The configurations below `ElasticApm` are fetched by the agent if the corresponding `IConfiguration` is passed to the agent.

In certain scenarios--like when you're not using ASP.NET Core--you won't activate the agent with the `UseElasticApm()` method.
In this case, you can set the agent's log level with <<config-log-level,`ElasticApm:LogLevel`>>, as shown in the following `appsettings.json` file:

[source,js]
----
{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ElasticApm":
    {
      "LogLevel":  "Debug",
      "ServerUrl":  "http://myapmserver:8200",
      "SecretToken":  "apm-server-secret-token",
      "TransactionSampleRate": 1.0
    }
}
----

[[configuration-on-asp-net]]
=== Configuration on ASP.NET

When monitoring ASP.NET applications the agent uses two source of configuration:
Web.config and environment variables.
Web.config has precedence over environment variables which means that
the agent first tries to find a configuration option value by its key in Web.config.
Only if it's not present then the agent tries to look for it among environment variables
and if it's not present there as well the agent falls back on the option's default value.

You can find the key of each configuration option
in the `IConfiguration or Web.config key` column of the corresponding option's description.

[float]
[[asp-net-sample-config]]
==== Sample configuration file

Below is a sample `Web.config` configuration file for a ASP.NET application.

[source,xml]
----
<?xml version="1.0" encoding="utf-8"?>
<!-- ... -->
<configuration>
    <!-- ... -->
    <appSettings>
        <!-- ... -->
        <add key="ElasticApm:ServerUrl" value="https://my-apm-server:8200" />
        <add key="ElasticApm:SecretToken" value="apm-server-secret-token" />
        <!-- ... -->
    </appSettings>
    <!-- ... -->
</configuration>
----

Additionally, on ASP.NET, you can implement your own configuration reader. To do this, implement the `IConfigurationReader` interface from the `Elastic.Apm.Config` namespace.
Once implemented, you can make use of the <<config-full-framework-configuration-reader-type, `FullFrameworkConfigurationReaderType`>> setting.

[float]
[[config-full-framework-configuration-reader-type]]
==== `FullFrameworkConfigurationReaderType`

This setting is .NET Full Framework only.

With this setting you can point an agent to a custom `IConfigurationReader` implementation and the agent will read configuration from your `IConfigurationReader` implementation.

Use type name in  https://docs.microsoft.com/en-us/dotnet/api/system.type.assemblyqualifiedname?view=netcore-3.1#System_Type_AssemblyQualifiedName[AssemblyQualifiedName] format (e.g: `MyClass, MyNamespace`).

[options="header"]
|============
| Environment variable name                              | Web.config key
| `ELASTIC_APM_FULL_FRAMEWORK_CONFIGURATION_READER_TYPE` | `ElasticApm:FullFrameworkConfigurationReaderType`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

If this setting is set in both the web.config file and as an environment variable, then the web.config file has precedence.


[[config-core]]
=== Core configuration options

[float]
[[config-recording]]
==== `Recording` (added[1.7.0])

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

A boolean specifying if the agent should be recording or not.
When recording, the agent captures HTTP requests, tracks errors, and collects and sends metrics.
When not recording, the agent works as a noop, not collecting data and not communicating with the APM server,
except for polling the central configuration endpoint.
As this is a reversible switch, agent threads are not killed when inactivated, but they will be
mostly idle in this state, so the overhead should be negligible.

You can use this setting to dynamically disable Elastic APM at runtime.

WARNING: Setting `Recording` to `false` influences the behavior of the <<public-api>>. When the agent is not active it won't keep track of transactions, spans and any related properties on those.

[options="header"]
|============
| Environment variable name       | IConfiguration or Web.config key
| `ELASTIC_APM_RECORDING`         | `ElasticApm:Recording`
|============


[options="header"]
|============
| Default        | Type
| `true`         | Boolean
|============


[float]
[[config-enabled]]
==== `Enabled` (added[1.7.0])

Setting to false will completely disable the agent, including instrumentation and remote config polling.
If you want to dynamically change the status of the agent, use <<config-recording,`recording`>> instead.

WARNING: Setting `Enabled` to `false` influences the behavior of the <<public-api>>. When the agent is not active it won't keep track of transactions, spans and any related properties on those.

[options="header"]
|============
| Environment variable name       | IConfiguration or Web.config key
| `ELASTIC_APM_ENABLED`           | `ElasticApm:Enabled`
|============

[options="header"]
|============
| Default        | Type
| `true`         | Boolean
|============


[float]
[[config-service-name]]
==== `ServiceName`

This is used to keep all the errors and transactions of your service together
and is the primary filter in the Elastic APM user interface.

NOTE: The service name must conform to this regular expression: `^[a-zA-Z0-9 _-]+$`. In less regexy terms: Your service name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces. Characters in service name which don't match regular expression will be replaced by `_` symbol.

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_SERVICE_NAME` | `ElasticApm:ServiceName`
|============

[options="header"]
|============
| Default                          | Type
| Name of the entry assembly       | String
|============

[float]
[[config-service-node-name]]
==== `ServiceNodeName` (added[1.3])

Optional name used to differentiate between nodes in a service.
If not set, data aggregations will be done based on a container ID (where valid) or on the reported hostname (automatically discovered).

NOTE: This feature requires APM Server versions >= 7.5

[options="header"]
|============
| Environment variable name       | IConfiguration or Web.config key
| `ELASTIC_APM_SERVICE_NODE_NAME` | `ElasticApm:ServiceNodeName`
|============

[options="header"]
|============
| Default        | Type
| `<none>`       | String
|============

[float]
[[config-service-version]]
==== `ServiceVersion`

A version string for the currently deployed version of the service. If you don’t
version your deployments, the recommended value for this field is the commit identifier
of the deployed revision, e.g. the output of git rev-parse HEAD.

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_SERVICE_VERSION` | `ElasticApm:ServiceVersion`
|============

[options="header"]
|============
| Default                                        | Type
| Informational version of the entry assembly    | String
|============


[float]
[[config-hostname]]
==== `HostName` (added[1.7])

Allows for the reported hostname to be manually specified. If unset, the hostname will be looked up.

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_HOSTNAME` | `ElasticApm:HostName`
|============

[options="header"]
|============
| Default                                        | Type
| `<none>`                                       | String
|============


[float]
[[config-environment]]
==== `Environment` (added[1.1])

The name of the environment this service is deployed in, e.g. "production" or "staging".

Environments allow you to easily filter data on a global level in the APM app.
It's important to be consistent when naming environments across agents.
See {apm-app-ref}/filters.html#environment-selector[environment selector] in the Kibana UI for more information.

NOTE: This feature is fully supported in the APM app in Kibana versions >= 7.2.
You must use the query bar to filter for a specific environment in versions prior to 7.2.

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_ENVIRONMENT`      | `ElasticApm:Environment`
|============

[options="header"]
|============
| Default        | Type
| See note below | String
|============

NOTE: On ASP.NET Core application the agent uses https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.ihostingenvironment.environmentname?view=aspnetcore-2.2#Microsoft_AspNetCore_Hosting_IHostingEnvironment_EnvironmentName[EnvironmentName from IHostingEnvironment] as default environment name.

[float]
[[config-transaction-sample-rate]]
==== `TransactionSampleRate`

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

By default, the agent will sample every transaction (e.g. a request to your service).
To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0.
The agent will still record the overall time and result for unsampled transactions,
but no context information, labels, or spans will be recorded.

NOTE: When parsing the value for this option, the agent doesn't consider the current culture.
It also expects that a period (`.`) is used to separate the integer and the fraction of a floating-point number.

This setting can be changed after agent's start.

[options="header"]
|============
| Environment variable name             | IConfiguration or Web.config key
| `ELASTIC_APM_TRANSACTION_SAMPLE_RATE` | `ElasticApm:TransactionSampleRate`
|============

[options="header"]
|============
| Default | Type
| 1.0     | Double
|============

[float]
[[config-transaction-max-spans]]
==== `TransactionMaxSpans` (performance) (added[1.1.1])

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

Limits the amount of spans that are recorded per transaction.
This is helpful in cases where a transaction creates a very high amount of spans,
for example, thousands of SQL queries.
Setting an upper limit helps prevent overloading the Agent and APM server in these edge cases.

NOTE: A value of `0` means that spans will never be collected.
Setting `-1` means that spans will never be dropped.
The Agent will revert to the default value if the value is set below `-1`.

This setting can be changed after agent's start.

[options="header"]
|============
| Environment variable name           | IConfiguration key
| `ELASTIC_APM_TRANSACTION_MAX_SPANS` | `ElasticApm:TransactionMaxSpans`
|============

[options="header"]
|============
| Default | Type
| `500`     | Integer
|============

[float]
[[config-central-config]]
==== `CentralConfig` (added[1.1])

If set to `true`, the agent makes periodic requests to the APM Server to fetch
the latest {apm-app-ref}/agent-configuration.html[APM Agent configuration].

[options="header"]
|============
| Environment variable name    | IConfiguration key
| `ELASTIC_APM_CENTRAL_CONFIG` | `ElasticApm:CentralConfig`
|============

[options="header"]
|============
| Default | Type
| true    | Boolean
|============

[float]
[[config-sanitize-field-names]]
==== `SanitizeFieldNames` (added[1.2])

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

Sometimes it is necessary to sanitize, i.e., remove, sensitive data sent to Elastic APM.
This config accepts a list of wildcard patterns of field names which should be sanitized.
These apply for example to HTTP headers and `application/x-www-form-urlencoded` data.

IMPORTANT: This setting only applies to values that are captured automatically by the agent. If you capture the request body manually with the public API, this configuration doesn't apply, and the agent won't sanitize the body.

The wildcard, `*`, matches zero or more characters, and matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.

You should review the data captured by Elastic APM carefully to make sure it does not contain sensitive information.
If you do find sensitive data in your Elasticsearch index,
you should add an additional entry to this list.
Make sure to include the default entries as well, as setting a value here will overwrite the defaults.

NOTE: Data in the query string is considered non-sensitive,
as sensitive information should not be sent in the query string.
See https://www.owasp.org/index.php/Information_exposure_through_query_strings_in_url[owasp.org] for more information.

[options="header"]
|============
| Environment variable name    | IConfiguration key
| `ELASTIC_APM_SANITIZE_FIELD_NAMES` | `ElasticApm:SanitizeFieldNames`
|============

[options="header"]
|============
| Default | Type
| `password, passwd, pwd, secret, *key, *token*, *session*, *credit*, *card*, authorization, set-cookie` | List<string>
|============

[float]
[[config-global-labels]]
==== `GlobalLabels` (added[1.2])

Labels added to all events, with the format `key=value[,key=value[,...]]`.
Any labels set by the application via the agent's public API will override global labels with the same keys.

[options="header"]
|============
| Environment variable name    | IConfiguration key
| `ELASTIC_APM_GLOBAL_LABELS` | `ElasticApm:GlobalLabels`
|============

[options="header"]
|============
| Default     | Type
| <empty map> | Map of string to string
|============

NOTE: This option requires APM Server 7.2 or later. It will have no effect on older versions.

[[config-reporter]]
=== Reporter configuration options

[float]
[[config-server-url]]
==== `ServerUrl`

The URL for your APM Server. The URL must be fully qualified, including protocol (`http` or `https`) and port.

IMPORTANT: Use of `ServerUrls` is deprecated. Use `ServerUrl`.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_SERVER_URL` | `ElasticApm:ServerUrl`
|============

[options="header"]
|============
| Default                 | Type
| `http://localhost:8200` | String
|============

[float]
[[config-secret-token]]
==== `SecretToken`

A string used to ensure that only your agents can send data to your APM server.

Both the agents and the APM server have to be configured with the same secret token.
Use this setting in case the APM Server requires a token (e.g. APM Server in Elastic Cloud).

WARNING: the `SecretToken` is sent as plain-text in every request to the server, so you should also secure
your communications using HTTPS. Unless you do so, your API Key could be observed by an attacker.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_SECRET_TOKEN` | `ElasticApm:SecretToken`
|============

[options="header"]
|============
| Default                 | Type
| `<none>`                | String
|============

[float]
[[config-api-key]]
==== `ApiKey` (added[1.4])

A base64-encoded string used to ensure that only your agents can send data to your APM server.
You must have created the API key using the APM server's {apm-server-ref-v}/api-key.html[command line tool].

NOTE: This feature is fully supported in the APM Server versions >= 7.6.

WARNING: the `APIKey` is sent as plain-text in every request to the server, so you should also secure
your communications using HTTPS. Unless you do so, your API Key could be observed by an attacker.

[options="header"]
|============
| Environment variable name  | IConfiguration or Web.config key
| `ELASTIC_APM_API_KEY`      | `ElasticApm:ApiKey`
|============

[options="header"]
|============
| Default                 | Type
| `<none>`                | A base64-encoded string
|============

[float]
[[config-verify-server-cert]]
==== `VerifyServerCert` (added[1.3])

By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.

Verification can be disabled by changing this setting to false.

[options="header"]
|============
| Environment variable name        | IConfiguration or Web.config key
| `ELASTIC_APM_VERIFY_SERVER_CERT` | `ElasticApm:VerifyServerCert`
|============

[options="header"]
|============
| Default                 | Type
| `true`                  | Boolean
|============

[float]
[[config-server-cert]]
==== `ServerCert` (added[1.9])

The path to a PEM-encoded certificate used for SSL/TLS by APM server, used to perform validation 
through certificate pinning. 

This can be specified when using a certificate signed by a Certificate Authority (CA) that is not in 
the trust store, such as a self-signed certificate.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_SERVER_CERT` | `ElasticApm:ServerCert`
|============

[options="header"]
|============
| Default                 | Type
| `<none>`                  | String
|============

[float]
[[config-flush-interval]]
==== `FlushInterval` (added[1.1])

The maximal amount of time events are held in the queue until there is enough to send a batch.
It's possible for a batch to contain less than <<config-max-batch-event-count,`MaxBatchEventCount`>> events
if there are events that need to be sent out because they were held for too long.
A lower value will increase the load on your APM server,
while a higher value can increase the memory pressure on your app.
A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `30s`.
The default unit for this option is `s`.

If `FlushInterval` is set to `0` (or `0s`, `0ms`, etc.) and
there's no event sending operation still in progress
then the Agent won't hold events in the queue and instead will send them immediately.

Setting `FlushInterval` to a negative value (for example `-1`, `-54s`, `-89ms`, etc.) is invalid and
in that case agent uses the default value instead.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_FLUSH_INTERVAL` | `ElasticApm:FlushInterval`
|============

[options="header"]
|============
| Default                 | Type
| `10s`                   | TimeDuration
|============

[float]
[[config-max-batch-event-count]]
==== `MaxBatchEventCount` (added[1.1])

The maximal number of events to send in a batch.
It's possible for a batch to contain less then the maximum events
if there are events that need to be sent out because they were held for too long
 (see <<config-flush-interval,`FlushInterval`>>).

Setting `MaxBatchEventCount` to 0 or a negative value is invalid and
in that case the Agent will use the default value instead.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_MAX_BATCH_EVENT_COUNT` | `ElasticApm:MaxBatchEventCount`
|============

[options="header"]
|============
| Default                 | Type
| 10                      | Integer
|============

[float]
[[config-max-queue-event-count]]
==== `MaxQueueEventCount` (added[1.1])

The maximum number of events to hold in the queue as candidates to be sent.
If the queue is at its maximum capacity then the agent discards the new events
until the queue has free space.

Setting `MaxQueueEventCount` to 0 or a negative value is invalid and
in that case the Agent will use the default value instead.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_MAX_QUEUE_EVENT_COUNT` | `ElasticApm:MaxQueueEventCount`
|============

[options="header"]
|============
| Default                 | Type
| 1000                    | Integer
|============

[float]
[[config-metrics-interval]]
==== `MetricsInterval` (added[1.0.0-beta1])

The interval at which the agent sends metrics to the APM Server.
Must be at least `1s`.
Set to `0s` to deactivate.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `30s`.
The default unit for this option is `s`.

[options="header"]
|============
| Default                 | Type
| `30s`                   | TimeDuration
|============

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_METRICS_INTERVAL` | `ElasticApm:MetricsInterval`
|============

[float]
[[config-disable-metrics]]
==== `DisableMetrics` (added[1.3.0])

Disables the collection of certain metrics. If the name of a metric matches any of the wildcard expressions, it will not be collected. Example: `foo.*,bar.*`

You can find the name of the available metrics in <<metrics>>.

This option supports the wildcard `*`, which matches zero or more characters. Examples: `/foo/*/bar/*/baz*, *foo*`. Matching is case insensitive by default. Prepending an element with (?-i) makes the matching case sensitive.

[options="header"]
|============
| Default                 | Type
| <none>                  | List<string>
|============

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_DISABLE_METRICS` | `ElasticApm:DisableMetrics`
|============

[float]
[[config-cloud-provider]]
==== `CloudProvider` (added[1.7.0])

Allows you to specify which cloud provider should be assumed for metadata collection. By default, the agent will attempt to detect the cloud provider and, if that fails, use trial and error to collect the metadata.

Valid options are `"auto"`, `"aws"`, `"gcp"`, `"azure"`, and `"none"`. If this config value is set to `"none"`, no cloud metadata will be collected. If set to any of
`"aws"`, `"gcp"`, or `"azure"`, attempts to collect metadata will only be performed
from the chosen provider.

[options="header"]
|============
| Environment variable name      | IConfiguration or Web.config key
| `ELASTIC_APM_CLOUD_PROVIDER`   | `ElasticApm:CloudProvider`
|============

[options="header"]
|============
| Default | Type
| `auto`  | String
|============

[[config-http]]
=== HTTP configuration options

[float]
[[config-capture-body]]
==== `CaptureBody` (performance) (added[1.0.1])

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

For transactions that are HTTP requests, the agent can optionally capture the request body, e.g., POST variables.
If the request has a body and this setting is disabled, the body will be shown as [REDACTED].
This option is case-insensitive.

[IMPORTANT]
====
To allow capturing request bodies, the agent sets `AllowSynchronousIO` to `true` on a per
request basis in ASP.NET Core, since capturing can occur in synchronous code paths.

https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?#allowsynchronousio-disabled[With ASP.NET Core 3.0 onwards, `AllowSynchronousIO` is `false` by default]
because a large number of blocking synchronous I/O operations can lead to thread pool starvation,
which makes the application unresponsive. If your application becomes unresponsive with this
feature enabled, consider disabling capturing.
====

[WARNING]
====
Request bodies often contain sensitive values like passwords, credit card numbers, etc.
If your service handles data like this, we advise to only enable this feature with care.
Turning on body capturing can also significantly increase the overhead in terms of heap usage,
network utilization, and Elasticsearch index size.
====

Possible options are `off`, `errors`, `transactions` and `all`:

* `off` - request bodies will never be reported
* `errors` - request bodies will only be reported with errors
* `transactions` - request bodies will only be reported with request transactions
* `all` - request bodies will be reported with both errors and request transactions

This setting can be changed after agent's start.

[options="header"]
|============
| Environment variable name     | IConfiguration or Web.config key
| `ELASTIC_APM_CAPTURE_BODY` | `ElasticApm:CaptureBody`
|============

[options="header"]
|============
| Default                 | Type
| `off`                  | String
|============

[float]
[[config-capture-body-content-types]]
==== `CaptureBodyContentTypes` (performance) (added[1.0.1])

Configures which content types should be captured.

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive.

This setting can be changed after agent's start.

[options="header"]
|============
| Environment variable name     | IConfiguration or Web.config key
| `ELASTIC_APM_CAPTURE_BODY_CONTENT_TYPES` | `ElasticApm:CaptureBodyContentTypes`
|============

[options="header"]
|============
| Default                 | Type
| `application/x-www-form-urlencoded*, text/*, application/json*, application/xml*`                  | List<string>
|============

[float]
[[config-capture-headers]]
==== `CaptureHeaders` (performance)

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

If set to `true`,
the agent will capture request and response headers, including cookies.

NOTE: Setting this to `false` reduces memory allocations, network bandwidth and disk space used by Elasticsearch.

[options="header"]
|============
| Environment variable name     | IConfiguration or Web.config key
| `ELASTIC_APM_CAPTURE_HEADERS` | `ElasticApm:CaptureHeaders`
|============

[options="header"]
|============
| Default                 | Type
| `true`                  | Boolean
|============

[float]
[[config-transaction-ignore-urls]]
==== `TransactionIgnoreUrls` (performance)

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

Used to restrict requests to certain URLs from being instrumented.

This property should be set to a list containing one or more strings.
When an incoming HTTP request is detected, its request path will be tested against each element in this list.
For example, adding `/home/index` to this list would match and remove instrumentation from the following URLs:

[source,txt]
----
https://www.mycoolsite.com/home/index
http://localhost/home/index
http://whatever.com/home/index?value1=123
----

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.

NOTE: All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting.

[options="header"]
|============
| Environment variable name             | IConfiguration or Web.config key
| `ELASTIC_APM_TRANSACTION_IGNORE_URLS` | `ElasticApm:TransactionIgnoreUrls`
|============

[options="header"]
|============
| Default                                                                                                                    | Type
| `/VAADIN/*, /heartbeat*, /favicon.ico", *.js", *.css", *.jpg", *.jpeg", *.png", *.gif", *.webp", *.svg", *.woff", *.woff2` | List<string>
|============

[float]
[[config-use-elastic-apm-traceparent-header]]
==== `UseElasticTraceparentHeader` (added[1.3.0])

To enable {apm-overview-ref-v}/distributed-tracing.html[distributed tracing], the agent adds trace context headers to outgoing HTTP requests made with the `HttpClient` type. These headers (`traceparent` and `tracestate`) are defined in the https://www.w3.org/TR/trace-context-1/[W3C Trace Context] specification.

When this setting is `true`, the agent will also add the header `elasticapm-traceparent` for backwards compatibility with older versions of Elastic APM agents. Versions prior to `1.3.0` only read the `elasticapm-traceparent` header.

[options="header"]
|============
| Environment variable name                    | IConfiguration or Web.config key
| `ELASTIC_APM_USE_ELASTIC_TRACEPARENT_HEADER` | `ElasticApm:UseElasticTraceparentHeder`
|============

[options="header"]
|============
| Default                 | Type
| `true`                  | Boolean
|============

[[config-messaging]]
=== Messaging configuration options

[float]
[[config-ignore-message-queues]]
==== `IgnoreMessageQueues` (added[1.9])

Used to filter out specific messaging queues/topics/exchanges from being traced. When set, sends-to and receives-from the 
specified queues/topics/exchanges will be ignored.

This config accepts a comma separated string of wildcard patterns of queues/topics/exchange names which should be ignored.

The wildcard, `*`, matches zero or more characters, and matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.

[options="header"]
|============
| Default        | Type
| <empty string> | String
|============

[options="header"]
|============
| Environment variable name            | IConfiguration or Web.config key
| `ELASTIC_APM_IGNORE_MESSAGE_QUEUES` | `ElasticApm:IgnoreMessageQueues`
|============


[[config-stacktrace]]
=== Stacktrace configuration options

[float]
[[config-application-namespaces]]
==== `ApplicationNamespaces` (added[1.5])

Used to determine whether a stack trace frame is an in-app frame or a library frame. When defined, all namespaces that do not start with one of the values of this collection are ignored when determining error culprit.

Multiple namespaces can be configured as a comma separated list. For example: `"MyAppA, MyAppB"`.

This suppresses any configuration of `ExcludedNamespaces`.

[options="header"]
|============
| Default        | Type
| <empty string> | String
|============

[options="header"]
|============
| Environment variable name            | IConfiguration or Web.config key
| `ELASTIC_APM_APPLICATION_NAMESPACES` | `ElasticApm:ApplicationNamespaces`
|============

[float]
[[config-excluded-namespaces]]
==== `ExcludedNamespaces` (added[1.5])

A list of namespaces to exclude when reading an exception's StackTrace to determine the culprit.

Namespaces are checked with `string.StartsWith()`, so "System." matches all System namespaces.

[options="header"]
|============
| Default        | Type
| "System., Microsoft., MS., FSharp., Newtonsoft.Json, Serilog, NLog, Giraffe." | String
|============

[options="header"]
|============
| Environment variable name            | IConfiguration or Web.config key
| `ELASTIC_APM_EXCLUDED_NAMESPACES` | `ElasticApm:ExcludedNamespaces`
|============

[[config-stack-trace-limit]]
==== `StackTraceLimit` (performance)

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect. Setting it to -1 means that all frames will be collected.

[options="header"]
|============
| Default                          | Type
| `50` | Integer
|============

[options="header"]
|============
| Environment variable name     | IConfiguration or Web.config key
| `ELASTIC_APM_STACK_TRACE_LIMIT` | `ElasticApm:StackTraceLimit`
|============

NOTE: If you would like to disable stack trace capturing only for spans, but still capture stack traces for errors, set the <<config-span-frames-min-duration>> config to `0`.

[float]
[[config-span-frames-min-duration]]
==== `SpanFramesMinDuration` (performance)

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

In its default settings,
the APM agent collects a stack trace for every recorded span with duration longer than 5ms.
While this is very helpful to find the exact place in your code that causes the span,
collecting this stack trace does have some overhead.
When setting this option to a negative value, like `-1ms`, stack traces will be collected for all spans.
Setting it to a positive value, e.g. `5ms`,
will limit stack trace collection to spans with durations equal to or longer than the given value,
e.g. 5 milliseconds.

To disable stack trace collection for spans completely, set the value to `0ms`.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `5ms`.
The default unit for this option is `ms`

[options="header"]
|============
| Default                          | Type
| `5ms` | TimeDuration
|============

[options="header"]
|============
| Environment variable name     | IConfiguration or Web.config key
| `ELASTIC_APM_SPAN_FRAMES_MIN_DURATION` | `ElasticApm:SpanFramesMinDuration`
|============


[[config-supportability]]
=== Supportability configuration options

[float]
[[config-log-level]]
==== `LogLevel`

<<dynamic-configuration, image:./images/dynamic-config.svg[] >>

Sets the logging level for the agent.

Valid options: `Critical`, `Error`, `Warning`, `Info`, `Debug`, `Trace` and `None` (`None` disables the logging).

IMPORTANT: The `UseElasticApm()` extension offers an overload to pass an `IConfiguration` instance to the agent.
When configuring your agent in this way, as is typical in an ASP.NET Core application,
you must instead set the `LogLevel` for the internal APM logger under the `Logging` section of `appsettings.json`. More details, including a <<sample-config,sample configuration file>> are available in <<configuration-on-asp-net-core>>.

[options="header"]
|============
| Environment variable name | IConfiguration or Web.config key
| `ELASTIC_APM_LOG_LEVEL`   | `ElasticApm:LogLevel`
|============

[options="header"]
|============
| Default                 | Type
| `Error`                 | String
|============

[[config-all-options-summary]]
=== All options summary

[options="header"]
|============
| Option name | <<dynamic-configuration, image:./images/dynamic-config.svg[] >> | Keywords
| <<config-api-key,`ApiKey`>> | No | Reporter
| <<config-application-namespaces,`ApplicationNamespaces`>> | No | Stacktrace
| <<config-capture-body,`CaptureBody`>> | Yes | HTTP, Performance
| <<config-capture-body-content-types,`CaptureBodyContentTypes`>> | Yes | HTTP, Performance
| <<config-capture-headers,`CaptureHeaders`>> | No | HTTP, Performance
| <<config-central-config,`CentralConfig`>> | No | Core
| <<config-cloud-provider,`CloudProvider`>> | No | Reporter
| <<config-disable-metrics,`DisableMetrics`>> | No | Reporter
| <<config-enabled,`Enabled`>> | No | Core
| <<config-environment,`Environment`>> | No | Core
| <<config-excluded-namespaces,`ExcludedNamespaces`>> | No | Stacktrace
| <<config-flush-interval,`FlushInterval`>> | No | Reporter
| <<config-global-labels,`GlobalLabels`>> | No | Core
| <<config-ignore-message-queues,`IgnoreMessageQueues`>> | Yes | Messaging, Performance
| <<config-hostname,`HostName`>> | No | Core
| <<config-log-level,`LogLevel`>> | Yes | Supportability
| <<config-max-batch-event-count,`MaxBatchEventCount`>> | No | Reporter
| <<config-max-queue-event-count,`MaxQueueEventCount`>> | No | Reporter
| <<config-metrics-interval,`MetricsInterval`>> | No | Reporter
| <<config-recording,`Recording`>> | Yes | Core
| <<config-sanitize-field-names,`SanitizeFieldNames`>> | Yes | Core
| <<config-secret-token,`SecretToken`>> | No | Reporter
| <<config-server-cert,`ServerCert`>> | No | Reporter
| <<config-server-url,`ServerUrl`>> | No | Reporter
| <<config-service-name,`ServiceName`>> | No | Core
| <<config-service-node-name, `ServiceNodeName`>> | No | Core
| <<config-service-version,`ServiceVersion`>> | No | Core
| <<config-span-frames-min-duration,`SpanFramesMinDuration`>> | No | Stacktrace, Performance
| <<config-stack-trace-limit,`StackTraceLimit`>> | No | Stacktrace, Performance
| <<config-transaction-ignore-urls,`TransactionIgnoreUrls`>>  | Yes | HTTP, Performance
| <<config-transaction-max-spans,`TransactionMaxSpans`>>  | Yes | Core, Performance
| <<config-transaction-sample-rate,`TransactionSampleRate`>> | Yes | Core, Performance
| <<config-use-elastic-apm-traceparent-header,`UseElasticTraceparentHeader`>> | No | HTTP
| <<config-verify-server-cert,`VerifyServerCert`>> | No | Reporter

|============
