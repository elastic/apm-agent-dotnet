---
name: Bootstrap Checkout
description: Ensures all actions bootstrap the same

inputs:
  rust:
    description: 'Install rust toolchain ("true" or "false")'
    required: false
    default: "false"
  azure:
    description: 'Install azure functions tool chain ("true" or "false")'
    required: false
    default: "false"
outputs:
  agent-version:
    description: "The current agent version number"
    value: ${{ steps.dotnet.outputs.agent-version }}
  major-version:
    description: "The current major version number, semver"
    value: ${{ steps.dotnet.outputs.major-version }}
    
runs:
  using: "composite"
  steps:
    # Ensure we fetch all tags
    - shell: bash
      run: |
        git fetch --prune --unshallow --tags
        git tag --list
        
    - uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.[cf]sproj*') }}
        restore-keys: |
          ${{ runner.os }}-nuget
          
    # Install latest .NET SDKs for supported LTS versions
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - id: dotnet
      shell: bash
      run: |
        dotnet --list-sdks
        dotnet tool restore
        AGENT_VERSION=$(dotnet minver -t=v -p=canary.0 -v=e)
        echo "Version Number: ${AGENT_VERSION}"
        echo "AGENT_VERSION=${AGENT_VERSION}" >> $GITHUB_ENV
        echo "agent-version=${AGENT_VERSION}" >> $GITHUB_OUTPUT
        echo "major-version=$(echo ${AGENT_VERSION} | cut -d"." -f1)" >> $GITHUB_OUTPUT

    # Setup git config
    - uses: elastic/apm-pipeline-library/.github/actions/setup-git@current

    # install common dependencies
    - name: Install common dependencies
      uses: ./.github/workflows/install-dependencies
      with:
        rust: '${{ inputs.rust }}'
        azure: '${{ inputs.azure }}'
