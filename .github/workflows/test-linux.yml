name: test-linux

on:
  push:
    branches:
      - main
    paths-ignore:
    - '*.md'
    - '*.asciidoc'
    - 'docs/**'
  pull_request:
    paths-ignore:
    - '*.md'
    - '*.asciidoc'
    - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
      with:
          azure: 'true'
      #    rust: 'true'
    
    - name: Test 
      shell: bash
      run: |
        dotnet test -c Release ElasticApmAgent.sln \
            --filter "FullyQualifiedName!~Elastic.Apm.StartupHook.Tests&FullyQualifiedName!~Elastic.Apm.Profiler.Managed.Tests" \
            --verbosity minimal \
            -f net7.0 \
            --logger:"junit;LogFilePath=build/output/junit-{framework}-{assembly}.xml;MethodFormat=Class;FailureBodyFormat=Verbose" \
          
    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
          name: test-results
          path: build/output/**/junit-*.xml
      
    - name: Package
      run: ./build.sh pack
    
    - uses: actions/upload-artifact@v3
      if: github.event_name == 'push' && startswith(github.ref, 'refs/heads')
      with:
          name: snapshoty-linux
          path: build/output/*
          retention-days: 1

  startup-hook-test:
    runs-on: ubuntu-latest
    # TODO disable while working on tests
    if: ${{ false }}

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
    
    - name: Build agent-zip
      run: ./build.sh agent-zip

    - name: Startup Hook Tests
      run: .ci/linux/test-startuphooks.sh

    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test/**/junit-*.xml

  profiler-test:
    runs-on: ubuntu-latest
    # TODO disable while working on tests
    if: ${{ false }}


    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
      with:
          rust: 'true'
    
    - name: Build profiler
      run: ./build.sh profiler-zip

    - name: Profiler Tests
      run: .ci/linux/test-profiler.sh

    - name: Create Docker Image
      run: .ci/linux/build_docker.sh

    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test/**/junit-*.xml
