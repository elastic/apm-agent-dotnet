name: test-linux

on:
  push:
    branches:
      - main
    paths-ignore:
    - '*.md'
    - '*.asciidoc'
    - 'docs/**'
  pull_request:
    paths-ignore:
    - '*.md'
    - '*.asciidoc'
    - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
      with:
          rust: 'true'
    
    - name: Package
      run: .ci/linux/release.sh 

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
    
    - name: Test & coverage
      run: .ci/linux/test.sh

    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test/**/junit-*.xml

  startup-hook-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
    
    - name: Build agent-zip
      run: ./build.sh agent-zip

    - name: Startup Hook Tests
      run: .ci/linux/test-startuphooks.sh

    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test/**/junit-*.xml

  profiler-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
      with:
          rust: 'true'
    
    - name: Build profiler
      run: ./build.sh profiler-zip

    - name: Profiler Tests
      run: .ci/linux/test-profiler.sh

    - name: Create Docker Image
      run: .ci/linux/build_docker.sh

    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test/**/junit-*.xml
