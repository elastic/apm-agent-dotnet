name: test-linux

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
  
defaults:
  run:
    shell: bash

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  
  
# 'pack' & 'tests' are required checks in this workflow.

# To not burn unneeded CI cycles:
# - The 'changeset' job detects doc only changes and allows us to skip several jobs.
# - Our required checks will always succeed if doc only changes are detected.
# - all jobs depend on 'changeset' and 'format' to not waste cycles on quickly fixable errors.

jobs:
  
  changeset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: changeset
        uses: ./.github/workflows/changeset
        
      - name: 'changeset output'
        run: "echo docs-changes-only: ${{ steps.changeset.outputs.docs-changes-only }}"
    outputs:
      docs-changes-only: ${{ steps.changeset.outputs.docs-changes-only }}
      ci-changes-only: ${{ steps.changeset.outputs.ci-changes-only }}
  
  format:
    runs-on: ubuntu-latest
    needs: [ 'changeset' ]
    steps:
      - run: 'echo "Skipping prerequisite step [format] because only doc changes are detected"'
        if: ${{ needs.changeset.outputs.docs-changes-only == 'true' }}
      - uses: actions/checkout@v4
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
      - name: Bootstrap Action Workspace
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
        uses: ./.github/workflows/bootstrap
      - name: Format
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false'  }}
        run: ./build.sh format
        
  #required step
  pack:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format' ]
    steps:
    - run: 'echo "Skipping required step [pack] because only doc changes are detected"'
      if: ${{ needs.changeset.outputs.docs-changes-only == 'true' }}
      
    - uses: actions/checkout@v4
      if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
    - name: Bootstrap Action Workspace
      if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
      uses: ./.github/workflows/bootstrap
      with:
          rust: 'true'
          
    - name: Package
      if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
      run: ./build.sh pack
    
    - uses: actions/upload-artifact@v4
      if: github.event_name == 'push' && startswith(github.ref, 'refs/heads')
      with:
        name: snapshoty-linux
        path: build/output/*
        retention-days: 1
  
  #required step
  tests:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format' ]
    timeout-minutes: 30

    steps:
      - run: 'echo "Skipping required step [tests] because only doc changes are detected"'
        if: ${{ needs.changeset.outputs.docs-changes-only == 'true' }}
        
      - uses: actions/checkout@v4
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
      - name: Bootstrap Action Workspace
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
        uses: ./.github/workflows/bootstrap
        
      - name: 'Tests: Unit'
        if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
        run: ./build.sh test --test-suite unit
        
  azure-tests:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format', 'tests' ]
    #TODO merge the two ifs again, the clean up is timing out
    if: ${{ false && needs.changeset.outputs.docs-changes-only == 'false' }}
    #if: |
    #  github.event_name != 'pull_request'
    #  || github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false
    steps:
      - uses: actions/checkout@v4
      - name: Bootstrap Action Workspace
        uses: ./.github/workflows/bootstrap
        with:
          azure: 'true'

      - name: 'Read credentials'
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          method: approle
          secrets: |
            secret/apm-team/ci/apm-agent-dotnet-azure client_id | ARM_CLIENT_ID ;
            secret/apm-team/ci/apm-agent-dotnet-azure client_secret | ARM_CLIENT_SECRET ;
            secret/apm-team/ci/apm-agent-dotnet-azure subscription_id | ARM_SUBSCRIPTION_ID ;
            secret/apm-team/ci/apm-agent-dotnet-azure tenant_id | ARM_TENANT_ID

      - name: 'Login to Azure'
        run: |
          az login --service-principal --username ${{ env.ARM_CLIENT_ID }} --password ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}
          az account set --subscription ${{ env.ARM_SUBSCRIPTION_ID }}
          echo "AZURE_RESOURCE_GROUP_PREFIX=ci-dotnet-${GITHUB_RUN_ID}" >> ${GITHUB_ENV}

      - name: 'Tests: Azure'
        run: ./build.sh test --test-suite azure
        
      - name: 'Teardown tests infra'
        if: ${{ always() }}
        run: |
          for group in $(az group list --query "[?name | starts_with(@,'${{ env.AZURE_RESOURCE_GROUP_PREFIX }}')]" --out json | jq .[].name --raw-output); do
            az group delete --name "${group}" --no-wait --yes
          done
          
  integration-tests:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format', 'tests' ]
    if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
    steps:
      - uses: actions/checkout@v4
      - name: Bootstrap Action Workspace
        uses: ./.github/workflows/bootstrap

      - name: 'Tests: Integrations'
        run: ./build.sh test --test-suite integrations
  
  startup-hook-tests:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format', 'tests' ]
    if: ${{ needs.changeset.outputs.docs-changes-only == 'false' }}
    steps:
    - uses: actions/checkout@v4
    - name: Bootstrap Action Workspace
      uses: ./.github/workflows/bootstrap
    
    - name: 'Tests: StartupHooks'
      run: ./build.sh test --test-suite startuphooks
    
  profiler-tests:
    runs-on: ubuntu-latest
    needs: [ 'changeset', 'format', 'tests' ]
    if: ${{ needs.changeset.outputs.docs-changes-only }}
    steps:
    - uses: actions/checkout@v4
    - name: Bootstrap Action Workspace
      id: bootstrap
      uses: ./.github/workflows/bootstrap
      with:
          rust: 'true'
    
    - name: 'Tests: Profiler'
      run: ./build.sh test --test-suite profiler
    
    - name: Build Profiler Docker Image
      run: |
        docker build . -t docker.elastic.co/observability/apm-agent-dotnet:${{ steps.bootstrap.outputs.agent-version }} \
            --build-arg AGENT_ZIP_FILE=build/output/elastic_apm_profiler_${{ steps.bootstrap.outputs.agent-version }}-linux-x64.zip
