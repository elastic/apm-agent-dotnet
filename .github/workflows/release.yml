name: release

on:
  release:
    types: [published]

permissions:
  contents: read

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  SLACK_CHANNEL: "#apm-agent-dotnet"

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      PREFIX_APM_AGENT: "build/output/ElasticApmAgent_"
      PREFIX_APM_PROFILER: "build/output/elastic_apm_profiler_"
      SUFFIX_APM_AGENT: ".zip"
      SUFFIX_APM_PROFILER: "-linux-x64.zip"
      DOCKER_IMAGE_NAME: "docker.elastic.co/observability/apm-agent-dotnet"
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
    - uses: actions/checkout@v5
    - name: Bootstrap Action Workspace
      id: bootstrap
      uses: ./.github/workflows/bootstrap
      with:
        rust: 'true'

    - name: Package
      run: ./build.sh pack

    - name: Release to Nuget
      run: .ci/deploy.sh ${{ secrets.NUGET_API_KEY }} ${{ secrets.NUGET_API_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Log in to the Elastic Container registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
        username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
        password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels)
      id: docker-meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f  # v5.8.0
      with:
        images: ${{ env.DOCKER_IMAGE_NAME }}
        flavor: |
          latest=auto
        tags: |
          # "1.2.3" and "latest" Docker tags on push of git tag "v1.2.3"
          type=semver,pattern={{version}},value=${{ steps.bootstrap.outputs.agent-version }}
          # "edge" Docker tag on git push to default branch
          type=edge

    - name: Build and Push Profiler Docker Image
      id: docker-push
      continue-on-error: true # continue for now until we see it working in action
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.docker-meta.outputs.tags }}
        labels: ${{ steps.docker-meta.outputs.labels }}
        build-args: |
          AGENT_ZIP_FILE=${{ env.PREFIX_APM_PROFILER }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_APM_PROFILER }}

    - name: Attest image
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
      continue-on-error: true # continue for now until we see it working in action
      with:
        subject-name: ${{ env.DOCKER_IMAGE_NAME }}
        subject-digest: ${{ steps.docker-push.outputs.digest }}
        push-to-registry: true

    - name: generate build provenance (APM Agent)
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
      with:
        subject-path: "${{ github.workspace }}/${{ env.PREFIX_APM_AGENT }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_APM_AGENT }}"

    - name: generate build provenance (APM Profiler)
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
      with:
        subject-path: "${{ github.workspace }}/${{ env.PREFIX_APM_PROFILER }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_APM_PROFILER }}"

    - name: Attach Profiler And Startup Hooks
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.ref_name }} "${{ env.PREFIX_APM_AGENT }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_APM_AGENT }}" "${{ env.PREFIX_APM_PROFILER }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_APM_PROFILER }}"

    - if: ${{ success() }}
      uses: elastic/oblt-actions/slack/send@v1
      continue-on-error: true #continue for now until we see it working in action
      with:
        bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: ${{ env.SLACK_CHANNEL }}
        message: |
          :large_green_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* published.
          Build: (<${{ env.JOB_URL }}|here>)
          Release URL: (<https://github.com/elastic/apm-agent-dotnet/releases/tag/${{ github.ref_name }}|${{ github.ref_name }}>)

    - if: ${{ failure() }}
      uses: elastic/oblt-actions/slack/send@v1
      continue-on-error: true #continue for now until we see it working in action
      with:
        bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: ${{ env.SLACK_CHANNEL }}
        message: |
          :large_yellow_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* could not be published.
          Build: (<${{ env.JOB_URL }}|here>)
          
  release-windows:
    runs-on: windows-2022
    needs: [ 'release']
    outputs:
      agent-version: ${{ steps.bootstrap.outputs.agent-version }}
      major-version: ${{ steps.bootstrap.outputs.major-version }}
    env:
      PREFIX_ZIP_FILE: "build/output/elastic_apm_profiler_"
      SUFFIX_ZIP_FILE: "-win-x64.zip"
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/workflows/bootstrap
        with:
          rust: 'true'

      - name: Build profiler
        run: ./build.bat profiler-zip

      - name: generate build provenance (APM Profiler)
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
        with:
          subject-path: "${{ github.workspace }}/${{ env.PREFIX_ZIP_FILE }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_ZIP_FILE }}"

      - name: Attach Profiler
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} "${{ env.PREFIX_ZIP_FILE }}${{ steps.bootstrap.outputs.agent-version }}${{ env.SUFFIX_ZIP_FILE }}"