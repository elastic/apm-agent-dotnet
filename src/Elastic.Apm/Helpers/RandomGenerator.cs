using System;

namespace Elastic.Apm.Helpers
{
	internal static class RandomGenerator
	{
		[ThreadStatic]
		private static Random _local;

		private static readonly Random Global = new Random();

		internal static Random GetInstance()
		{
			var inst = _local;
			if (inst == null)
			{
				int seed;
				lock (Global) seed = Global.Next();
				_local = inst = new Random(seed);
			}
			return inst;
		}

		internal static void GenerateRandomBytes(byte[] bytes) => GetInstance().NextBytes(bytes);

		/// <summary>
		/// Creates a random generated byte array hex encoded into a string.
		/// </summary>
		/// <param name="bytes">
		/// The byte array that will be filled with a random number - this defines the length of the generated
		/// random bits
		/// </param>
		/// <returns>The random number hex encoded as string</returns>
		internal static string GenerateRandomBytesAsString(byte[] bytes)
		{
			GenerateRandomBytes(bytes);
			return BitConverter.ToString(bytes).Replace("-", "").ToLowerInvariant();
		}

		internal static string GenerateRandomBytesAsString(int numberOfBytes) => GenerateRandomBytesAsString(new byte[numberOfBytes]);

		internal static double GenerateRandomDoubleBetween0And1() => GetInstance().NextDouble();
	}
}
